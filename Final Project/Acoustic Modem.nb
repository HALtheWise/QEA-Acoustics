(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     75620,       1791]
NotebookOptionsPosition[     70385,       1605]
NotebookOutlinePosition[     70718,       1620]
CellTagsIndexPosition[     70675,       1617]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Comms final project: Acoustic Modem", "Title",
 CellChangeTimes->{{3.6826813785335817`*^9, 3.682681379590159*^9}, {
  3.682710876474948*^9, 3.682710892530466*^9}, {3.682980932118884*^9, 
  3.682980953632352*^9}, {3.6832870653509636`*^9, 3.6832870854599743`*^9}, {
  3.6832873288913145`*^9, 3.6832873404404697`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<../MMA library.m\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.682710916634346*^9, 3.682710945444784*^9}, {
  3.682711378657494*^9, 3.682711389969411*^9}}],

Cell[CellGroupData[{

Cell["Shared constants", "Section",
 CellChangeTimes->{{3.6832875389373174`*^9, 3.6832875420816317`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Global`databaud", " ", "=", " ", 
    TemplateBox[{"40","\"Hz\"","hertz","\"Hertz\""},
     "Quantity"]}], ";"}], 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Global`speakerbaud", " ", "=", " ", 
    TemplateBox[{"40000","\"Hz\"","hertz","\"Hertz\""},
     "Quantity"]}], ";"}], 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Global`carrierfreq", "=", 
    TemplateBox[{"400","\"Hz\"","hertz","\"Hertz\""},
     "Quantity"]}], ";"}], 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.683287543924816*^9, 3.683287605911014*^9}, {
  3.6832876485882816`*^9, 3.683287702112633*^9}, {3.6832877420886307`*^9, 
  3.683287760777499*^9}, {3.683414587589601*^9, 3.6834146002358656`*^9}, {
  3.6834182143267045`*^9, 3.6834182190917044`*^9}, {3.6834184060497046`*^9, 
  3.6834184061377044`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symbolBases", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"#", " ", "I"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"0", ",", "Pi"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6834148897008066`*^9, 3.6834149143338065`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683414944873807*^9, {3.6834182249867043`*^9, 3.683418237975704*^9}, 
   3.6834184205847044`*^9, 3.683538367816215*^9}]
}, Open  ]],

Cell["The start of the signal is denoted by a chirp", "Text",
 CellChangeTimes->{{3.683415799091457*^9, 3.683415809562504*^9}}],

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "\"\<notallthatrandom\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Global`signalStart", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{
       RowBox[{"speakerbaud", "/", "databaud"}], "*", "3"}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SeedRandom", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6834157949350414`*^9, 3.683415868011348*^9}, {
  3.6834160142919745`*^9, 3.683416168553399*^9}, {3.683416259822525*^9, 
  3.683416266763219*^9}, {3.6834182515927043`*^9, 3.683418252654704*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Global`phaseCorrectFreq", " ", "=", " ", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.6834149429858065`*^9, 3.6834149480218067`*^9}, {
  3.6835396473537083`*^9, 3.683539669599038*^9}, {3.6835434580309973`*^9, 
  3.683543459783703*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transmitter", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.683287430332458*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<tx`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.683287430333458*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{57., {0., 12.}}]], "Output",
 CellChangeTimes->{{3.6832874303354588`*^9, 3.683287437226147*^9}, 
   3.683288976625736*^9, 3.6832902466271305`*^9, {3.6832902850881305`*^9, 
   3.6832902897141304`*^9}, 3.6832910728252954`*^9, 3.683414763539194*^9, 
   3.68341623987053*^9, 3.683416272661809*^9, 3.683416559371477*^9, 
   3.683417371954727*^9, 3.683417435237055*^9, 3.683417881412737*^9, 
   3.6834182586777043`*^9, 3.6834184246307044`*^9, 3.6835392288086777`*^9, 
   3.68353980104675*^9, 3.6835435030645323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 1: Generate signal codes", "Subsection",
 CellChangeTimes->{{3.6832874303384585`*^9, 3.683287485779002*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"codeLen", "=", 
   RowBox[{"speakerbaud", "/", "databaud"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6832878412795486`*^9, 3.683287864545875*^9}}],

Cell["\<\
The codes are still complex at this point, and will only be transformed to \
real space before being played.\
\>", "Text",
 CellChangeTimes->{{3.68328790299572*^9, 3.6832879282152414`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"baseCode", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "2", "Pi", " ", 
       RowBox[{"QuantityMagnitude", "@", "carrierfreq"}], " ", "#"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"N", "@", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"1", "/", 
         RowBox[{"QuantityMagnitude", "@", "databaud"}]}], ",", 
        RowBox[{"1", "/", 
         RowBox[{"QuantityMagnitude", "@", "speakerbaud"}]}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"codes", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"baseCode", "*", "#"}], "&"}], "/@", "symbolBases"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6832878230457253`*^9, 3.6832878254189625`*^9}, {
  3.6832878906134815`*^9, 3.6832878932117414`*^9}, {3.683287933052725*^9, 
  3.68328805851427*^9}, {3.683288105199736*^9, 3.683288144851736*^9}, {
  3.6832881842847357`*^9, 3.683288212465736*^9}, {3.6832882879867363`*^9, 
  3.6832883277047358`*^9}, {3.683288991190736*^9, 3.683289062324736*^9}, {
  3.6832891202340417`*^9, 3.683289162335251*^9}, {3.683414646026444*^9, 
  3.683414664204262*^9}, {3.683414959578807*^9, 3.6834149645038066`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2: Retrieve data to transmit", "Subsection",
 CellChangeTimes->{{3.6832874694333677`*^9, 3.683287494997924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawdata", "=", "\"\<does this thing work?\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.6832892655645733`*^9, 3.6832892844914656`*^9}, {
  3.6832895381278267`*^9, 3.683289538285843*^9}, {3.6832902531881304`*^9, 
  3.6832902545311303`*^9}, {3.6832903065661306`*^9, 3.6832903105971303`*^9}, {
  3.68341736547608*^9, 3.6834173683483667`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3: Convert data to symbols", "Subsection",
 CellChangeTimes->{{3.683287497098134*^9, 3.683287505773001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bytes", "=", 
  RowBox[{"ToCharacterCode", "@", "rawdata"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"symbols", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"#", ",", "2", ",", "8"}], "]"}], "&"}], "/@", "bytes"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", "symbols"}], "Input",
 CellChangeTimes->{{3.6832892901300297`*^9, 3.683289317486765*^9}, {
   3.683289426920707*^9, 3.6832895837293863`*^9}, {3.6832910644384565`*^9, 
   3.6832910645254655`*^9}, {3.6834178667832003`*^9, 3.6834178721396646`*^9}, 
   3.683417966513226*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "111", ",", "101", ",", "115", ",", "32", ",", "116", ",", 
   "104", ",", "105", ",", "115", ",", "32", ",", "116", ",", "104", ",", 
   "105", ",", "110", ",", "103", ",", "32", ",", "119", ",", "111", ",", 
   "114", ",", "107", ",", "63"}], "}"}]], "Output",
 CellChangeTimes->{{3.6832894888539*^9, 3.6832895843164454`*^9}, {
   3.6832902467861304`*^9, 3.68329028523213*^9}, 3.6832903180231304`*^9, {
   3.6832910651065235`*^9, 3.6832910729583087`*^9}, 3.6834147636812086`*^9, 
   3.683416240009544*^9, 3.6834162728008227`*^9, 3.683416559509491*^9, 
   3.6834173720897408`*^9, 3.6834174353720684`*^9, 3.683417884693409*^9, 
   3.6834179690279746`*^9, 3.683418258765704*^9, 3.683418424732704*^9, 
   3.683539229162547*^9, 3.6835398014067698`*^9, 3.683543503158186*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.6832894888539*^9, 3.6832895843164454`*^9}, {
   3.6832902467861304`*^9, 3.68329028523213*^9}, 3.6832903180231304`*^9, {
   3.6832910651065235`*^9, 3.6832910729583087`*^9}, 3.6834147636812086`*^9, 
   3.683416240009544*^9, 3.6834162728008227`*^9, 3.683416559509491*^9, 
   3.6834173720897408`*^9, 3.6834174353720684`*^9, 3.683417884693409*^9, 
   3.6834179690279746`*^9, 3.683418258765704*^9, 3.683418424732704*^9, 
   3.683539229162547*^9, 3.6835398014067698`*^9, 3.683543503160081*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3.5: Riffle phase-reset corrections into signal", "Subsection",
 CellChangeTimes->{{3.683539679617332*^9, 3.683539698036731*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symbols", "=", 
  RowBox[{"Riffle", "[", 
   RowBox[{"symbols", ",", "0", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "phaseCorrectFreq"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.683539701005796*^9, 3.683539708137987*^9}, {
  3.6835397571521997`*^9, 3.6835397876328297`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.683539801501182*^9, 3.683543503189571*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4: Interleave transmit codes", "Subsection",
 CellChangeTimes->{{3.683287508639288*^9, 3.6832875153889627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"signal", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"codes", "[", 
       RowBox[{"[", 
        RowBox[{"#", "+", "1"}], "]"}], "]"}], "&"}], "/@", "symbols"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6832896041284266`*^9, 3.683289647049718*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4.5: Prepend start code", "Subsection",
 CellChangeTimes->{{3.6834157581973677`*^9, 3.6834157660591536`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"signal", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"signalStart", ",", "signal"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6834162139589396`*^9, 3.6834162296185055`*^9}, 
   3.6834173790974417`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"startDelay", "=", 
  RowBox[{"RandomInteger", "[", "10000", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signal", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "startDelay"}], "]"}], ",", "signal"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6834164958501253`*^9, 3.6834165555230923`*^9}, 
   3.683417383704902*^9}],

Cell[BoxData["6492"], "Output",
 CellChangeTimes->{3.6834165610476446`*^9, 3.6834173818687186`*^9, 
  3.68341743548908*^9, 3.6834182588227043`*^9, 3.6834184247837043`*^9, 
  3.68353922937144*^9, 3.683539801750202*^9, 3.6835435032498903`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 5: Transmit and save", "Subsection",
 CellChangeTimes->{{3.683287517913215*^9, 3.6832875221366377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sound", "=", 
   RowBox[{"SampledSoundList", "[", 
    RowBox[{
     RowBox[{"Re", "@", "signal"}], ",", 
     RowBox[{"QuantityMagnitude", "@", "speakerbaud"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6832898991129217`*^9, 3.6832899723882484`*^9}, 
   3.6832902355581303`*^9}],

Cell[BoxData[
 RowBox[{"EmitSound", "[", "sound", "]"}]], "Input",
 CellChangeTimes->{{3.683289654034416*^9, 3.6832897266566777`*^9}, {
  3.6832899750975194`*^9, 3.683289998117821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<test data/output.wav\>\"", ",", "sound"}], "]"}]], "Input",
 CellChangeTimes->{{3.6832898427072816`*^9, 3.683289843642375*^9}, {
   3.6832900052395334`*^9, 3.683290039747984*^9}, 3.683539565055748*^9}],

Cell[BoxData["\<\"test data/output.wav\"\>"], "Output",
 CellChangeTimes->{{3.6832900199470043`*^9, 3.6832900402130303`*^9}, {
   3.6832902469721303`*^9, 3.68329031818513*^9}, 3.68329107317433*^9, 
   3.6834147639332333`*^9, 3.683416242297773*^9, 3.6834162745619993`*^9, 
   3.6834165629038305`*^9, 3.683417393851917*^9, 3.6834174376152925`*^9, 
   3.6834182615467043`*^9, 3.6834184260337043`*^9, 3.683539230048049*^9, 
   3.683539802717931*^9, 3.683543503786212*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", "Subsection",
 CellChangeTimes->{{3.6832897656275744`*^9, 3.6832897685428658`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"context", "=", "\"\<tx`\>\""}], "}"}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
     RowBox[{"End", "[", "]"}], ",", "\"\<Not in context\>\""}], "]"}]}], 
  "]"}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6832874303394585`*^9}],

Cell[BoxData["\<\"tx`\"\>"], "Output",
 CellChangeTimes->{3.6832910731873317`*^9, 3.6834147639432344`*^9, 
  3.683416274580001*^9, 3.6834165629178314`*^9, 3.6834173938999214`*^9, 
  3.683417437658297*^9, 3.6834182616797047`*^9, 3.683418426192704*^9, 
  3.683539230220461*^9, 3.683539802803382*^9, 3.683543503819278*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Record a sound", "Section",
 CellChangeTimes->{{3.6834167543259706`*^9, 3.6834167638029184`*^9}}],

Cell[TextData[{
 "First, run ",
 StyleBox["arecord -r 80000 \[OpenCurlyDoubleQuote]recorded.wav\
\[CloseCurlyDoubleQuote]", "Program"],
 " in a terminal"
}], "Text",
 CellChangeTimes->{{3.6835391170342093`*^9, 3.68353914683147*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"recorded", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<test data/recorded.wav\>\"", ",", "\"\<Sound\>\""}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.68341676541908*^9, 3.6834167838959274`*^9}, {
   3.683416850912628*^9, 3.6834168548460217`*^9}, 3.6834170697965145`*^9, {
   3.683538673269253*^9, 3.68353869529354*^9}, {3.683538966032433*^9, 
   3.6835389808494883`*^9}, {3.6835390277595*^9, 3.683539028459749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "@", "recorded"}]], "Input",
 CellChangeTimes->{{3.683416924902026*^9, 3.6834169470292387`*^9}}],

Cell[BoxData["Sound"], "Output",
 CellChangeTimes->{3.6834178062501526`*^9, 3.6834183243927045`*^9, 
  3.6834184597077045`*^9, 3.683418509569704*^9, 3.6835385129487123`*^9, 
  3.683538983972994*^9, 3.683539031110476*^9, 3.683539261257309*^9, 
  3.683540966193185*^9, 3.683543470663913*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"resampled", "=", 
   RowBox[{"AudioResample", "[", 
    RowBox[{"recorded", ",", 
     RowBox[{"QuantityMagnitude", "@", "speakerbaud"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.683417026126148*^9, 3.6834170449640317`*^9}, {
  3.683417091682703*^9, 3.683417094694004*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputSound", "=", 
   RowBox[{"AudioData", "[", "resampled", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Depth", "[", "inputSound", "]"}], ">", "2"}], ",", 
   RowBox[{
    RowBox[{"inputSound", "=", 
     RowBox[{"inputSound", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683417110835618*^9, 3.6834172222947626`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotFFT", "@", "inputSound"}]], "Input",
 CellChangeTimes->{{3.683539278669242*^9, 3.683539282717339*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
hlqb0XJmYHGh95ItNVmXml5YXVeWcWI0GLbX5p/dGpFRz7NLthSdTq/TpZff
HBLLs3Vuz1+9WYvowj1r+s/T6kPkgVfFprLhuZ5cY0HNqby0lGSdpfTmS180
NHHWnNfrUbbbhqux7ZCXXfdRWZx79uHXaXVfp938JvP2Hova81ftdU9a3Z60
m39LXx+i9qjDLTdjPV+v92zX/eXdo6TudnS9buz46n9WV7dpiMivnV4kOjm6
9avNnrUhm4+lXzvtqvW3jFviDP1ret36JOIKJjpxBRub8XzE5XCDD+VXaOxi
qrHqkTuiPnd2OtXaODvXnpecc2cipCih8duZCYkVo4sTZ1PTb6ttSwLDV00H
LM3z/s1TzQc259fUwuMyY47aIiXqf3093XRBq7uEp2tNCQcTi59s+3R2ZO5O
Vvq1TX95ZMPSRhx16eafJpZFYgRGb6Yl5vV5XV2F+reXNijW6UL+5alNz8+F
p39JN9cMB5RVxT90zpTZMB/cMjff8tR78suacLC4Yy6iRH0vakzGqkHX+Fp+
bdmGa7cN1TTObpz/iG8cBwubtxwMn3Sd/LIX1Y+c22d86I3fvLSSxkfcdX9g
fu3gkfx7dbv1m+Gnd5+2v3oGZj4yuNZ8IL/CM79YLLXTscRQlp0Op+uFTZ//
fEmLF8XTnSPqX4uvT5hsL/1aCtivWLKaZ6Y2TxVa3pxfr9UGlWshqYTdjnn1
4YCw/bIl+9bDU+b8+9s95BAcLjHmPfe9HW0bllbkZ43VVHal5fGr6dmXlSbb
gHOwcPPSBtXEOXVku4qPEnG/ftR646zNmHn+pT+6ZW7+8PvyK8dQ+iqgzScy
15Bprh4ZieXX1m241vhGWXqaZyzb2Bz2WwDAFp+UX+asZqdaLxBVBPN+Q3Ze
viovJ81c3NJTaMh/FkuEqLvL+nZ+iRpQlrV51r55qo65iZq0zFjFYy2/XlUa
s9+kVDQUDEWV1eWJi2nWVmdgsiYtq3Gbtg2BoQL9kdgHbbu0WgR57K+edd29
eaHo8MH8AedAwXp+Rd2d1lh+Kb6+cttd59sVn9DkNVtKZlnN7Y7n9jdtVDfN
Tcsva5trLb8sl+zvyC9HfYa5ZnQ0ll9bt2GHK/bRvv58fdFQYPs9s77LFpdC
31nr3/Ol5duP+6r8ZYttKbn5i9Zffp/P/dzF+5xif/n0uX2w5O+0WaTezl+8
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
P/QzFvkFAAAAAAAAAAA2+v+SEuV1
   "], {{0, 0}, {576, 302}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{576, 302},
  PlotRange->{{0, 576}, {0, 302}}]], "Output",
 CellChangeTimes->{3.683539318405798*^9, 3.6835409924965076`*^9, 
  3.683543497612561*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Read a test sound", "Section",
 CellChangeTimes->{{3.6834167543259706`*^9, 3.6834167638029184`*^9}, {
  3.68353841826523*^9, 3.683538421660481*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSound", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<test data/output.wav\>\"", ",", "\"\<Data\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6832904165821304`*^9, 3.6832905281511307`*^9}, {
  3.68329059660713*^9, 3.6832906875771303`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Receiver", "Section",
 CellChangeTimes->{{3.6832903627421303`*^9, 3.68329037494013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<rx`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6832903627431307`*^9, 3.6834151196178064`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{57., {0., 12.}}]], "Output",
 CellChangeTimes->{{3.6832903627451305`*^9, 3.6832903838611307`*^9}, {
   3.6832910819862113`*^9, 3.6832911038403964`*^9}, 3.6834143519800425`*^9, 
   3.6834147692217627`*^9, 3.6834151212738066`*^9, 3.6834183367287045`*^9, 
   3.683418466140704*^9, {3.6835384323507853`*^9, 3.6835384420648813`*^9}, 
   3.683539343280645*^9, 3.683539401129464*^9, 3.683540715830537*^9, 
   3.683540761420629*^9, 3.6835409996301413`*^9, {3.68354322908807*^9, 
   3.683543236099112*^9}, 3.683543518860442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the agreed-upon start code, then crop to it", "Subsection",
 CellChangeTimes->{{3.6832906927401304`*^9, 3.6832907166431303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conv", "=", 
   RowBox[{"ListCorrelate", "[", 
    RowBox[{"signalStart", ",", "inputSound"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683416301585701*^9, 3.6834163088644285`*^9}, {
  3.6834163709286346`*^9, 3.6834163852860703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matchpoint", "=", 
  RowBox[{
   RowBox[{"Ordering", "[", 
    RowBox[{"conv", ",", 
     RowBox[{"-", "1"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6834164655340943`*^9, 3.6834164843489757`*^9}}],

Cell[BoxData["6493"], "Output",
 CellChangeTimes->{
  3.6834164863711777`*^9, 3.683416576150155*^9, 3.683417231639697*^9, 
   3.683417818174345*^9, 3.6834183395257044`*^9, {3.6834184696897044`*^9, 
   3.6834184817707043`*^9}, 3.683418515319704*^9, 3.683538442150764*^9, 
   3.683539343508724*^9, 3.683540715883935*^9, 3.6835409997727547`*^9, 
   3.6835432361790743`*^9, 3.683543518935927*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"croppedsound", "=", 
   RowBox[{"inputSound", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"matchpoint", "+", 
       RowBox[{"Length", "@", "signalStart"}]}], ";;"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6832907371151304`*^9, 3.6832907570971303`*^9}, {
  3.683416629968536*^9, 3.6834166417117105`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "@", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"conv", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6834162949250355`*^9, 3.68341629717126*^9}, {
  3.6834163895845003`*^9, 3.683416405495091*^9}, {3.683539389233773*^9, 
  3.68353939858014*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztnQdbE1vUts97vb/k/UvfDwALIAfQo4JAChADCU2KGJViwYpiQ+kIKEVA
IAjSBAGRotQgGAik8a2ZDcMwCZFt4xzz3NeGa2Znyl5r7f3Mnkmy8n9H/vl/
R/73r7/+ekt/of/z11/C8uYvICQk5FccFgDwBwPdAADwAt0AAPAC3QAA8BKy
zUE3BADwnwGKAQDgBboBAODlm7oxNfeVyu9pDADgP8FeujG/tHa/9t3I5NLJ
rDr15cZjKdWXH735zW3jxmUdrsw1aFVqrT7nSc+Sg6ocFnNRpl6n0xlMZUNW
F9vOs3I/Nf9SXMsdqXEFH2xsbZ+G/CEe2GW7X0b/oNhLN25X9QecLY/Pbz5q
qGS6YXrQNWdZdTj/tU50rXRdUCdXjKw43Y75tty4jIaFjcWmdK2pbcnptk9X
G7W5fVb35qbTo9Kxjxr3QZu3F/Kxsx/T/iQPyGz30+gfFHvpBgkF6QaVw4kV
YWnPA/Xl4enPabXm9YfvPldV24euoVnP+i9f12cWrWPTX2h68+7jouLVxWVb
3+j88MTSqs1BC+39n8uaRyT5WlndmJ5nt1Gu1bGe3s/rLMTrH67EJb+a7EzT
mAZXhSqXpcmoyR21bbqXzYrKkblv14zafJpmd7hGppb26Qenyz08YfH6Ejnh
7fs5MnD/94aysbMf05Qe+PzCEJP91qsHotPb+yaWPnyyvKtMOpNhfjuuDA0X
5CIK36u3U2TdjxxHjlw3fjz67f3TZbd0Us3HxdWlr2udT/VR6e0lzSPUD9lJ
Zy2rZbLVnwv1f9bhabBQV/8Vp/gpfFM3FCX3cbfX7Z+3j9OEZMPuZKtTcyu3
qwY+L1jZKtUvfFmjY+qvtki7dL2boV1IK64+6yFdYmcMPFseef4F1ZMgsM3u
1QxSfUhydZCxihZCU2vo/8fPy/TSzOLqzYo+2tdQ2FpY3itvj+39ZbWh4X2Z
Xlc8Zd/ctK7Zz+cnnoqrWnY5ZrYribXhbFXK67FS/ZkLHeWtY1LNo4K4f5Lr
bS73dk1Hy7tZmn31js5TTWP35LOmEekaRIGu6/xIzdDmNpGBkhMYrX3Tj18M
u91bmy+t2Fp7p2lj1aXGs1deMTOfNr5veTtNC0nXW5ifH9YP0Wr/2AK5wncX
rXxRoYk+T2Pn3vO+3Ey1p2msZuij5U6RIdbYyjyguf7uwoOunuHZ2oqU4ONX
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
ALz4zvcFAAAAAH/j/wOSQy/E
   "], {{0, 0}, {360, 210}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{360, 210},
  PlotRange->{{0, 360}, {0, 210}}]], "Output",
 CellChangeTimes->{{3.6834163913316746`*^9, 3.6834164249850397`*^9}, 
   3.683416576693209*^9, 3.6834166671882577`*^9, 3.683417232307764*^9, 
   3.6834178223457623`*^9, 3.6834183424147043`*^9, {3.6834184713017044`*^9, 
   3.6834184832927046`*^9}, 3.683418517286704*^9, 3.683538442964232*^9, 
   3.6835393474328527`*^9, 3.683539407814789*^9, 3.683540719508134*^9, 
   3.683541003586738*^9, 3.6835432396411333`*^9, 3.683543522303103*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chop the sound into databaud long segments", "Subsection",
 CellChangeTimes->{{3.68329072004613*^9, 3.68329073225813*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"segments", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"croppedsound", ",", 
     RowBox[{"speakerbaud", "/", "databaud"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "segments"}]}], "Input",
 CellChangeTimes->{{3.6832908368191304`*^9, 3.6832908400091305`*^9}, {
  3.6832908783591304`*^9, 3.68329096201313*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"187", ",", "1000"}], "}"}]], "Output",
 CellChangeTimes->{{3.6832909150691304`*^9, 3.68329096240913*^9}, {
   3.6832910820682197`*^9, 3.68329110617563*^9}, 3.6834143627151155`*^9, 
   3.683414769310771*^9, 3.6834151296198063`*^9, 3.6834166724767866`*^9, 
   3.6834178315636835`*^9, 3.6834183480837045`*^9, 3.6834185229107046`*^9, 
   3.683538445172015*^9, 3.683539351320879*^9, 3.683540067519328*^9, 
   3.6835407195724993`*^9, 3.683541003682907*^9, 3.6835432397304897`*^9, 
   3.6835435223883877`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create base carrier frequency", "Subsection",
 CellChangeTimes->{{3.6835401475852327`*^9, 3.683540156095517*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"baseCode", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "2", "Pi", " ", 
       RowBox[{"QuantityMagnitude", "@", "carrierfreq"}], " ", "#"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"N", "@", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"1", "/", 
         RowBox[{"QuantityMagnitude", "@", "databaud"}]}], ",", 
        RowBox[{"1", "/", 
         RowBox[{"QuantityMagnitude", "@", "speakerbaud"}]}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{"Length", "@", "baseCode"}]}], "Input",
 CellChangeTimes->{{3.683414683570198*^9, 3.683414685202361*^9}, 
   3.683414744076248*^9}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{
  3.683414512892132*^9, 3.683414688236665*^9, {3.683414745455386*^9, 
   3.683414769388779*^9}, 3.6834151325658064`*^9, 3.6834166778273215`*^9, 
   3.683417833795907*^9, 3.683418528423704*^9, 3.683538445285963*^9, 
   3.683539351481411*^9, 3.6835401614310627`*^9, 3.6835407196179028`*^9, 
   3.683541003747209*^9, 3.683543239766673*^9, 3.683543522411497*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract phase offsets from occasional phase reset symbols", "Subsection",
 CellChangeTimes->{{3.68353984561474*^9, 3.683539862293233*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"phasesegments", "=", 
   RowBox[{"segments", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}], ";;", "phaseCorrectFreq"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datasegments", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"segments", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "phaseCorrectFreq"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "phasesegments"}]}], "Input",
 CellChangeTimes->{{3.683539884729368*^9, 3.6835399384895144`*^9}, {
  3.683539994718966*^9, 3.68354008289863*^9}, {3.683540221969879*^9, 
  3.683540228407827*^9}}],

Cell[BoxData["19"], "Output",
 CellChangeTimes->{
  3.6835400834416437`*^9, {3.6835402233435793`*^9, 3.683540228684108*^9}, 
   3.683540719640201*^9, 3.683541003752399*^9, 3.683543239794198*^9, 
   3.6835435224361362`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"phaseadjustments", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{"baseCode", ",", "#"}], "]"}], "/", 
      RowBox[{"Length", "@", "#"}]}], "&"}], "/@", "phasesegments"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"smoothinglength", "=", "5"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phaseadjustments", " ", "=", " ", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"phaseadjustments", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"smoothinglength", "-", "1"}]}], "]"}], "]"}], ",", 
       "phaseadjustments"}], "]"}], ",", "smoothinglength"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phaseadjustments", "=", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"e", ",", 
         RowBox[{"phaseCorrectFreq", "-", "1"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "phaseadjustments"}], "}"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", 
      RowBox[{"Length", "@", "datasegments"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Re", "[", "#1", "]"}], ",", 
            RowBox[{"Im", "[", "#1", "]"}]}], "}"}], ",", "#1"}], "]"}], 
        "&"}], ")"}], "/@", 
      RowBox[{"phaseadjustments", "[", 
       RowBox[{"[", 
        RowBox[{";;", "i"}], "]"}], "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2", ",", 
     RowBox[{"Length", "@", "phaseadjustments"}], ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6835400935800734`*^9, 3.6835401070914803`*^9}, {
  3.683540208730747*^9, 3.683540219325007*^9}, {3.683540294463811*^9, 
  3.683540300357486*^9}, {3.6835403463640223`*^9, 3.683540355538766*^9}, {
  3.683540429711261*^9, 3.683540464366022*^9}, {3.6835405042552767`*^9, 
  3.6835405073251057`*^9}, {3.6835405853120527`*^9, 3.683540705334097*^9}, {
  3.683543100147072*^9, 3.683543114551066*^9}, {3.683543155462474*^9, 
  3.683543216109202*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.6835406689665623`*^9, 3.683540719687133*^9, 3.683541003819128*^9, {
   3.6835432169451838`*^9, 3.683543239819848*^9}, 3.6835435224601583`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.4999899360092667`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.609246840846237`*^-16", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6835406689665623`*^9, 3.683540719687133*^9, 3.683541003819128*^9, {
   3.6835432169451838`*^9, 3.683543239819848*^9}, 3.683543522462232*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 97, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 2, 168, 1}}, Typeset`size$$ = {
    360., {143., 148.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$172499$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$172499$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Map[Tooltip[{
           Re[#], 
           Im[#]}, #]& , 
         Part[$CellContext`phaseadjustments, 
          Span[1, $CellContext`i$$]]], AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`i$$, 2, 168, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {185., 192.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6835406689665623`*^9, 3.683540719687133*^9, 3.683541003819128*^9, {
   3.6835432169451838`*^9, 3.683543239819848*^9}, 3.683543522497017*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For each segment, identify the most likely symbol", "Subsection",
 CellChangeTimes->{{3.6832911735743694`*^9, 3.683291175832595*^9}, {
  3.683291257619773*^9, 3.6832912587618876`*^9}, {3.683414321962041*^9, 
  3.6834143364884934`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ratios", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"Length", "@", "baseCode"}], ")"}]}], 
        RowBox[{"Dot", "[", 
         RowBox[{"baseCode", ",", "#"}], "]"}]}], "&"}], "/@", 
      "datasegments"}], ")"}], "/", "phaseadjustments"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ratios", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Re", "[", "#1", "]"}], ",", 
            RowBox[{"Im", "[", "#1", "]"}]}], "}"}], ",", "#1"}], "]"}], 
        "&"}], ")"}], "/@", 
      RowBox[{"ratios", "[", 
       RowBox[{"[", 
        RowBox[{";;", "i"}], "]"}], "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2", ",", 
     RowBox[{"Length", "@", "ratios"}], ",", "1"}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6834143907749214`*^9, 3.6834144378266263`*^9}, {
   3.6834144920780506`*^9, 3.6834145024670897`*^9}, {3.6834147264744883`*^9, 
   3.6834147309609365`*^9}, {3.683418026028274*^9, 3.6834180564062357`*^9}, {
   3.683418111300746*^9, 3.683418150426833*^9}, 3.6834185624187045`*^9, {
   3.68353941319215*^9, 3.683539440460832*^9}, {3.683539481861857*^9, 
   3.68353949600369*^9}, 3.683540020699502*^9, {3.6835407415362787`*^9, 
   3.6835408023406067`*^9}, {3.683540852172641*^9, 3.6835409286451597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.9999999999999999`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9721522630525295`*^-31", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.0000000000000002`"}], "+", 
    RowBox[{"6.636047252243409`*^-18", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.0000000000000002`"}], "+", 
    RowBox[{"6.636047252243409`*^-18", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999999`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9721522630525295`*^-31", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999999`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9721522630525295`*^-31", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.0000000000000002`"}], "+", 
    RowBox[{"6.636047252243409`*^-18", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999999`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9721522630525295`*^-31", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999999`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9721522630525295`*^-31", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999999`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9721522630525295`*^-31", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.0000000000000002`"}], "+", 
    RowBox[{"6.636047252243409`*^-18", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.683418036086268*^9, {3.6834181148653893`*^9, 3.6834181513917365`*^9}, 
   3.6834185285277042`*^9, 3.6834185631727047`*^9, 3.6835384453748083`*^9, 
   3.6835393516273413`*^9, {3.683539460799567*^9, 3.683539496788838*^9}, 
   3.683540269012649*^9, 3.683540719786553*^9, {3.683540771576006*^9, 
   3.6835408030148067`*^9}, {3.683540854933079*^9, 3.683540898461124*^9}, 
   3.6835409293313513`*^9, 3.683541003932168*^9, 3.6835432399185762`*^9, 
   3.683543522585742*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 168, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 2, 168, 1}}, Typeset`size$$ = {
    360., {178., 184.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$172566$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$172566$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Map[Tooltip[{
           Re[#], 
           Im[#]}, #]& , 
         Part[rx`ratios, 
          Span[1, $CellContext`i$$]]], AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`i$$, 2, 168, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {221., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.683418036086268*^9, {3.6834181148653893`*^9, 3.6834181513917365`*^9}, 
   3.6834185285277042`*^9, 3.6834185631727047`*^9, 3.6835384453748083`*^9, 
   3.6835393516273413`*^9, {3.683539460799567*^9, 3.683539496788838*^9}, 
   3.683540269012649*^9, 3.683540719786553*^9, {3.683540771576006*^9, 
   3.6835408030148067`*^9}, {3.683540854933079*^9, 3.683540898461124*^9}, 
   3.6835409293313513`*^9, 3.683541003932168*^9, 3.6835432399185762`*^9, 
   3.683543522594648*^9}]
}, Open  ]],

Cell["\<\
TODO: Correct for drift in phase space with clever snapping algorithms.\
\>", "Text",
 CellChangeTimes->{{3.6834153407428064`*^9, 3.6834153575588064`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestSymbol", "[", "ratio_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "differences", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"differences", "=", 
      RowBox[{"Abs", "[", 
       RowBox[{"ratio", "-", "symbolBases"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{"differences", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6834148477378063`*^9, 3.6834148512398067`*^9}, {
  3.683414975505807*^9, 3.6834150668108063`*^9}, {3.6834151501128063`*^9, 
  3.6834151501928062`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symbols", "=", 
  RowBox[{"bestSymbol", "/@", "ratios"}]}]], "Input",
 CellChangeTimes->{{3.683415094920807*^9, 3.6834151063858066`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.683415108099807*^9, 3.6834151542588067`*^9}, 
   3.683416677894328*^9, 3.6834178338859158`*^9, 3.6834185285547047`*^9, 
   3.6835384454152937`*^9, 3.683539351760089*^9, 3.683540719889319*^9, 
   3.6835407716190567`*^9, {3.68354086299861*^9, 3.683540878705038*^9}, 
   3.683541004042306*^9, 3.683543240011119*^9, 3.6835435226656027`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convert the symbols back into text", "Subsection",
 CellChangeTimes->{{3.683415170276807*^9, 3.6834151780278063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bytes", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"FromDigits", "[", 
     RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
   RowBox[{"Partition", "[", 
    RowBox[{"symbols", ",", "8"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6834151808318067`*^9, 3.6834151931428065`*^9}, {
  3.683415230505807*^9, 3.683415249979807*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "111", ",", "101", ",", "115", ",", "32", ",", "116", ",", 
   "104", ",", "105", ",", "115", ",", "32", ",", "116", ",", "104", ",", 
   "105", ",", "110", ",", "103", ",", "32", ",", "119", ",", "111", ",", 
   "114", ",", "107", ",", "63"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6834152517018065`*^9, 3.6834166807296114`*^9, 3.683417847053232*^9, 
   3.6834185349997044`*^9, 3.683538445419894*^9, 3.683539351838315*^9, 
   3.6835407198963842`*^9, {3.683540863024015*^9, 3.6835408787364807`*^9}, 
   3.6835410040944567`*^9, 3.683543240034648*^9, 3.6835435226889343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"output", "=", 
  RowBox[{"FromCharacterCode", "@", "bytes"}]}]], "Input",
 CellChangeTimes->{{3.683415292361807*^9, 3.6834152989448066`*^9}}],

Cell[BoxData["\<\"does this thing work?\"\>"], "Output",
 CellChangeTimes->{
  3.683415299276807*^9, 3.683416680772616*^9, 3.6834178471062374`*^9, 
   3.683418535081704*^9, 3.683538445442738*^9, 3.683539351914228*^9, 
   3.683540719918708*^9, {3.68354086304917*^9, 3.6835408787657146`*^9}, 
   3.683541004146204*^9, 3.6835432400577908`*^9, 3.683543522711431*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", "Subsection",
 CellChangeTimes->{{3.6832905377471304`*^9, 3.68329054079613*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"context", "=", "\"\<rx`\>\""}], "}"}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
     RowBox[{"End", "[", "]"}], ",", "\"\<Not in context\>\""}], "]"}]}], 
  "]"}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6832903627491302`*^9}],

Cell[BoxData["\<\"rx`\"\>"], "Output",
 CellChangeTimes->{{3.6832903627521305`*^9, 3.6832903816691303`*^9}, 
   3.6832910820772204`*^9, 3.6834147694127817`*^9, 3.683538445466393*^9, 
   3.6835393521056833`*^9, 3.6835407199432096`*^9, 3.683541004200259*^9, 
   3.683543240081163*^9, 3.683543522737357*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{942, 962},
WindowMargins->{{0, Automatic}, {Automatic, 28}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 321, 4, 93, "Title"],
Cell[904, 28, 331, 7, 68, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1260, 39, 105, 1, 65, "Section"],
Cell[1368, 42, 974, 23, 102, "Input"],
Cell[CellGroupData[{
Cell[2367, 69, 280, 8, 35, "Input"],
Cell[2650, 79, 235, 6, 32, "Output"]
}, Open  ]],
Cell[2900, 88, 127, 1, 33, "Text"],
Cell[3030, 91, 707, 17, 91, "Input"],
Cell[3740, 110, 272, 5, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4049, 120, 120, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[4194, 127, 625, 19, 56, "Input"],
Cell[4822, 148, 628, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5487, 164, 119, 1, 45, "Subsection"],
Cell[5609, 167, 182, 4, 32, "Input"],
Cell[5794, 173, 199, 4, 33, "Text"],
Cell[5996, 179, 1330, 33, 80, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7363, 217, 123, 1, 45, "Subsection"],
Cell[7489, 220, 375, 6, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7901, 231, 119, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[8045, 236, 629, 14, 77, "Input"],
Cell[8677, 252, 825, 13, 32, "Output"],
Cell[9505, 267, 2333, 32, 166, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11887, 305, 140, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[12052, 310, 349, 9, 32, "Input"],
Cell[12404, 321, 2089, 29, 128, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14542, 356, 123, 1, 45, "Subsection"],
Cell[14668, 359, 326, 10, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15031, 374, 120, 1, 45, "Subsection"],
Cell[15154, 377, 242, 6, 35, "Input"],
Cell[CellGroupData[{
Cell[15421, 387, 417, 11, 56, "Input"],
Cell[15841, 400, 241, 3, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16131, 409, 115, 1, 45, "Subsection"],
Cell[16249, 412, 325, 9, 35, "Input"],
Cell[16577, 423, 185, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[16787, 430, 255, 4, 32, "Input"],
Cell[17045, 436, 467, 6, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17561, 448, 99, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[17685, 453, 426, 13, 35, "Input"],
Cell[18114, 468, 319, 4, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18494, 479, 103, 1, 65, "Section"],
Cell[18600, 482, 232, 6, 33, "Text"],
Cell[18835, 490, 465, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[19325, 503, 127, 2, 30, "Input"],
Cell[19455, 507, 289, 4, 30, "Output"]
}, Open  ]],
Cell[19759, 514, 320, 8, 35, "Input"],
Cell[20082, 524, 460, 13, 56, "Input"],
Cell[CellGroupData[{
Cell[20567, 541, 130, 2, 32, "Input"],
Cell[20700, 545, 12332, 205, 317, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33081, 756, 154, 2, 65, "Section"],
Cell[33238, 760, 296, 7, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33571, 772, 94, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[33690, 777, 651, 19, 56, "Input"],
Cell[34344, 798, 637, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35018, 814, 140, 1, 45, "Subsection"],
Cell[35161, 817, 276, 6, 35, "Input"],
Cell[CellGroupData[{
Cell[35462, 827, 265, 7, 32, "Input"],
Cell[35730, 836, 392, 6, 30, "Output"]
}, Open  ]],
Cell[36137, 845, 366, 10, 35, "Input"],
Cell[CellGroupData[{
Cell[36528, 859, 331, 7, 32, "Input"],
Cell[36862, 868, 10538, 174, 225, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47449, 1048, 128, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[47602, 1053, 381, 9, 52, "Input"],
Cell[47986, 1064, 542, 9, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48577, 1079, 119, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[48721, 1084, 786, 22, 80, "Input"],
Cell[49510, 1108, 410, 6, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49969, 1120, 144, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[50138, 1125, 709, 19, 72, "Input"],
Cell[50850, 1146, 222, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51109, 1155, 2438, 66, 277, "Input"],
Cell[53550, 1223, 195, 3, 30, "Output"],
Cell[53748, 1228, 2710, 44, 189, "Output"],
Cell[56461, 1274, 1842, 39, 394, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58352, 1319, 241, 3, 45, "Subsection"],
Cell[CellGroupData[{
Cell[58618, 1326, 1730, 46, 128, "Input"],
Cell[60351, 1374, 1863, 35, 130, "Output"],
Cell[62217, 1411, 2149, 44, 466, "Output"]
}, Open  ]],
Cell[64381, 1458, 165, 3, 33, "Text"],
Cell[64549, 1463, 762, 19, 131, "Input"],
Cell[CellGroupData[{
Cell[65336, 1486, 161, 3, 32, "Input"],
Cell[65500, 1491, 2183, 30, 109, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67732, 1527, 124, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[67881, 1532, 348, 9, 32, "Input"],
Cell[68232, 1543, 631, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68900, 1559, 165, 3, 32, "Input"],
Cell[69068, 1564, 362, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69479, 1575, 96, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[69600, 1580, 426, 13, 35, "Input"],
Cell[70029, 1595, 304, 4, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

