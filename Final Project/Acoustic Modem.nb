(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     65838,       1562]
NotebookOptionsPosition[     61005,       1389]
NotebookOutlinePosition[     61338,       1404]
CellTagsIndexPosition[     61295,       1401]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Comms final project: Acoustic Modem", "Title",
 CellChangeTimes->{{3.6826813785335817`*^9, 3.682681379590159*^9}, {
  3.682710876474948*^9, 3.682710892530466*^9}, {3.682980932118884*^9, 
  3.682980953632352*^9}, {3.6832870653509636`*^9, 3.6832870854599743`*^9}, {
  3.6832873288913145`*^9, 3.6832873404404697`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<../MMA library.m\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.682710916634346*^9, 3.682710945444784*^9}, {
  3.682711378657494*^9, 3.682711389969411*^9}}],

Cell[CellGroupData[{

Cell["Shared constants", "Section",
 CellChangeTimes->{{3.6832875389373174`*^9, 3.6832875420816317`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Global`databaud", " ", "=", " ", 
    TemplateBox[{"40","\"Hz\"","hertz","\"Hertz\""},
     "Quantity"]}], ";"}], 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Global`speakerbaud", " ", "=", " ", 
    TemplateBox[{"40000","\"Hz\"","hertz","\"Hertz\""},
     "Quantity"]}], ";"}], 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Global`carrierfreq", "=", 
    TemplateBox[{"400","\"Hz\"","hertz","\"Hertz\""},
     "Quantity"]}], ";"}], 
  RowBox[{"(*", " ", "hertz", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.683287543924816*^9, 3.683287605911014*^9}, {
  3.6832876485882816`*^9, 3.683287702112633*^9}, {3.6832877420886307`*^9, 
  3.683287760777499*^9}, {3.683414587589601*^9, 3.6834146002358656`*^9}, {
  3.6834182143267045`*^9, 3.6834182190917044`*^9}, {3.6834184060497046`*^9, 
  3.6834184061377044`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symbolBases", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"#", " ", "I"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"0", ",", "Pi"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6834148897008066`*^9, 3.6834149143338065`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683414944873807*^9, {3.6834182249867043`*^9, 3.683418237975704*^9}, 
   3.6834184205847044`*^9, 3.683538367816215*^9}]
}, Open  ]],

Cell["The start of the signal is denoted by a chirp", "Text",
 CellChangeTimes->{{3.683415799091457*^9, 3.683415809562504*^9}}],

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "\"\<notallthatrandom\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Global`signalStart", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{
       RowBox[{"speakerbaud", "/", "databaud"}], "*", "3"}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SeedRandom", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6834157949350414`*^9, 3.683415868011348*^9}, {
  3.6834160142919745`*^9, 3.683416168553399*^9}, {3.683416259822525*^9, 
  3.683416266763219*^9}, {3.6834182515927043`*^9, 3.683418252654704*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Global`phaseCorrectFreq", " ", "=", " ", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.6834149429858065`*^9, 3.6834149480218067`*^9}, {
  3.6835396473537083`*^9, 3.683539669599038*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transmitter", "Section",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.683287430332458*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<tx`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.683287430333458*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{24., {0., 12.}}]], "Output",
 CellChangeTimes->{{3.6832874303354588`*^9, 3.683287437226147*^9}, 
   3.683288976625736*^9, 3.6832902466271305`*^9, {3.6832902850881305`*^9, 
   3.6832902897141304`*^9}, 3.6832910728252954`*^9, 3.683414763539194*^9, 
   3.68341623987053*^9, 3.683416272661809*^9, 3.683416559371477*^9, 
   3.683417371954727*^9, 3.683417435237055*^9, 3.683417881412737*^9, 
   3.6834182586777043`*^9, 3.6834184246307044`*^9, 3.6835392288086777`*^9, 
   3.68353980104675*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 1: Generate signal codes", "Subsection",
 CellChangeTimes->{{3.6832874303384585`*^9, 3.683287485779002*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"codeLen", "=", 
   RowBox[{"speakerbaud", "/", "databaud"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6832878412795486`*^9, 3.683287864545875*^9}}],

Cell["\<\
The codes are still complex at this point, and will only be transformed to \
real space before being played.\
\>", "Text",
 CellChangeTimes->{{3.68328790299572*^9, 3.6832879282152414`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"baseCode", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "2", "Pi", " ", 
       RowBox[{"QuantityMagnitude", "@", "carrierfreq"}], " ", "#"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"N", "@", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"1", "/", 
         RowBox[{"QuantityMagnitude", "@", "databaud"}]}], ",", 
        RowBox[{"1", "/", 
         RowBox[{"QuantityMagnitude", "@", "speakerbaud"}]}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"codes", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"baseCode", "*", "#"}], "&"}], "/@", "symbolBases"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6832878230457253`*^9, 3.6832878254189625`*^9}, {
  3.6832878906134815`*^9, 3.6832878932117414`*^9}, {3.683287933052725*^9, 
  3.68328805851427*^9}, {3.683288105199736*^9, 3.683288144851736*^9}, {
  3.6832881842847357`*^9, 3.683288212465736*^9}, {3.6832882879867363`*^9, 
  3.6832883277047358`*^9}, {3.683288991190736*^9, 3.683289062324736*^9}, {
  3.6832891202340417`*^9, 3.683289162335251*^9}, {3.683414646026444*^9, 
  3.683414664204262*^9}, {3.683414959578807*^9, 3.6834149645038066`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2: Retrieve data to transmit", "Subsection",
 CellChangeTimes->{{3.6832874694333677`*^9, 3.683287494997924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawdata", "=", "\"\<does this thing work?\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.6832892655645733`*^9, 3.6832892844914656`*^9}, {
  3.6832895381278267`*^9, 3.683289538285843*^9}, {3.6832902531881304`*^9, 
  3.6832902545311303`*^9}, {3.6832903065661306`*^9, 3.6832903105971303`*^9}, {
  3.68341736547608*^9, 3.6834173683483667`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3: Convert data to symbols", "Subsection",
 CellChangeTimes->{{3.683287497098134*^9, 3.683287505773001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bytes", "=", 
  RowBox[{"ToCharacterCode", "@", "rawdata"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"symbols", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"#", ",", "2", ",", "8"}], "]"}], "&"}], "/@", "bytes"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", "symbols"}], "Input",
 CellChangeTimes->{{3.6832892901300297`*^9, 3.683289317486765*^9}, {
   3.683289426920707*^9, 3.6832895837293863`*^9}, {3.6832910644384565`*^9, 
   3.6832910645254655`*^9}, {3.6834178667832003`*^9, 3.6834178721396646`*^9}, 
   3.683417966513226*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "111", ",", "101", ",", "115", ",", "32", ",", "116", ",", 
   "104", ",", "105", ",", "115", ",", "32", ",", "116", ",", "104", ",", 
   "105", ",", "110", ",", "103", ",", "32", ",", "119", ",", "111", ",", 
   "114", ",", "107", ",", "63"}], "}"}]], "Output",
 CellChangeTimes->{{3.6832894888539*^9, 3.6832895843164454`*^9}, {
   3.6832902467861304`*^9, 3.68329028523213*^9}, 3.6832903180231304`*^9, {
   3.6832910651065235`*^9, 3.6832910729583087`*^9}, 3.6834147636812086`*^9, 
   3.683416240009544*^9, 3.6834162728008227`*^9, 3.683416559509491*^9, 
   3.6834173720897408`*^9, 3.6834174353720684`*^9, 3.683417884693409*^9, 
   3.6834179690279746`*^9, 3.683418258765704*^9, 3.683418424732704*^9, 
   3.683539229162547*^9, 3.6835398014067698`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.6832894888539*^9, 3.6832895843164454`*^9}, {
   3.6832902467861304`*^9, 3.68329028523213*^9}, 3.6832903180231304`*^9, {
   3.6832910651065235`*^9, 3.6832910729583087`*^9}, 3.6834147636812086`*^9, 
   3.683416240009544*^9, 3.6834162728008227`*^9, 3.683416559509491*^9, 
   3.6834173720897408`*^9, 3.6834174353720684`*^9, 3.683417884693409*^9, 
   3.6834179690279746`*^9, 3.683418258765704*^9, 3.683418424732704*^9, 
   3.683539229162547*^9, 3.6835398014082413`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3.5: Riffle phase-reset corrections into signal", "Subsection",
 CellChangeTimes->{{3.683539679617332*^9, 3.683539698036731*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symbols", "=", 
  RowBox[{"Riffle", "[", 
   RowBox[{"symbols", ",", "0", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "phaseCorrectFreq"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.683539701005796*^9, 3.683539708137987*^9}, {
  3.6835397571521997`*^9, 3.6835397876328297`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.683539801501182*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4: Interleave transmit codes", "Subsection",
 CellChangeTimes->{{3.683287508639288*^9, 3.6832875153889627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"signal", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"codes", "[", 
       RowBox[{"[", 
        RowBox[{"#", "+", "1"}], "]"}], "]"}], "&"}], "/@", "symbols"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6832896041284266`*^9, 3.683289647049718*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4.5: Prepend start code", "Subsection",
 CellChangeTimes->{{3.6834157581973677`*^9, 3.6834157660591536`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"signal", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"signalStart", ",", "signal"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6834162139589396`*^9, 3.6834162296185055`*^9}, 
   3.6834173790974417`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"startDelay", "=", 
  RowBox[{"RandomInteger", "[", "10000", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"signal", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "startDelay"}], "]"}], ",", "signal"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6834164958501253`*^9, 3.6834165555230923`*^9}, 
   3.683417383704902*^9}],

Cell[BoxData["3026"], "Output",
 CellChangeTimes->{3.6834165610476446`*^9, 3.6834173818687186`*^9, 
  3.68341743548908*^9, 3.6834182588227043`*^9, 3.6834184247837043`*^9, 
  3.68353922937144*^9, 3.683539801750202*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 5: Transmit and save", "Subsection",
 CellChangeTimes->{{3.683287517913215*^9, 3.6832875221366377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sound", "=", 
   RowBox[{"SampledSoundList", "[", 
    RowBox[{
     RowBox[{"Re", "@", "signal"}], ",", 
     RowBox[{"QuantityMagnitude", "@", "speakerbaud"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6832898991129217`*^9, 3.6832899723882484`*^9}, 
   3.6832902355581303`*^9}],

Cell[BoxData[
 RowBox[{"EmitSound", "[", "sound", "]"}]], "Input",
 CellChangeTimes->{{3.683289654034416*^9, 3.6832897266566777`*^9}, {
  3.6832899750975194`*^9, 3.683289998117821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<test data/output.wav\>\"", ",", "sound"}], "]"}]], "Input",
 CellChangeTimes->{{3.6832898427072816`*^9, 3.683289843642375*^9}, {
   3.6832900052395334`*^9, 3.683290039747984*^9}, 3.683539565055748*^9}],

Cell[BoxData["\<\"test data/output.wav\"\>"], "Output",
 CellChangeTimes->{{3.6832900199470043`*^9, 3.6832900402130303`*^9}, {
   3.6832902469721303`*^9, 3.68329031818513*^9}, 3.68329107317433*^9, 
   3.6834147639332333`*^9, 3.683416242297773*^9, 3.6834162745619993`*^9, 
   3.6834165629038305`*^9, 3.683417393851917*^9, 3.6834174376152925`*^9, 
   3.6834182615467043`*^9, 3.6834184260337043`*^9, 3.683539230048049*^9, 
   3.683539802717931*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", "Subsection",
 CellChangeTimes->{{3.6832897656275744`*^9, 3.6832897685428658`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"context", "=", "\"\<tx`\>\""}], "}"}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
     RowBox[{"End", "[", "]"}], ",", "\"\<Not in context\>\""}], "]"}]}], 
  "]"}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6832874303394585`*^9}],

Cell[BoxData["\<\"tx`\"\>"], "Output",
 CellChangeTimes->{3.6832910731873317`*^9, 3.6834147639432344`*^9, 
  3.683416274580001*^9, 3.6834165629178314`*^9, 3.6834173938999214`*^9, 
  3.683417437658297*^9, 3.6834182616797047`*^9, 3.683418426192704*^9, 
  3.683539230220461*^9, 3.683539802803382*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Record a sound", "Section",
 CellChangeTimes->{{3.6834167543259706`*^9, 3.6834167638029184`*^9}}],

Cell[TextData[{
 "First, run ",
 StyleBox["arecord -r 80000 \[OpenCurlyDoubleQuote]recorded.wav\
\[CloseCurlyDoubleQuote]", "Program"],
 " in a terminal"
}], "Text",
 CellChangeTimes->{{3.6835391170342093`*^9, 3.68353914683147*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"recorded", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<test data/recorded.wav\>\"", ",", "\"\<Sound\>\""}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.68341676541908*^9, 3.6834167838959274`*^9}, {
   3.683416850912628*^9, 3.6834168548460217`*^9}, 3.6834170697965145`*^9, {
   3.683538673269253*^9, 3.68353869529354*^9}, {3.683538966032433*^9, 
   3.6835389808494883`*^9}, {3.6835390277595*^9, 3.683539028459749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "@", "recorded"}]], "Input",
 CellChangeTimes->{{3.683416924902026*^9, 3.6834169470292387`*^9}}],

Cell[BoxData["Sound"], "Output",
 CellChangeTimes->{3.6834178062501526`*^9, 3.6834183243927045`*^9, 
  3.6834184597077045`*^9, 3.683418509569704*^9, 3.6835385129487123`*^9, 
  3.683538983972994*^9, 3.683539031110476*^9, 3.683539261257309*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"resampled", "=", 
   RowBox[{"AudioResample", "[", 
    RowBox[{"recorded", ",", 
     RowBox[{"QuantityMagnitude", "@", "speakerbaud"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.683417026126148*^9, 3.6834170449640317`*^9}, {
  3.683417091682703*^9, 3.683417094694004*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputSound", "=", 
   RowBox[{"AudioData", "[", "resampled", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Depth", "[", "inputSound", "]"}], ">", "2"}], ",", 
   RowBox[{
    RowBox[{"inputSound", "=", 
     RowBox[{"inputSound", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683417110835618*^9, 3.6834172222947626`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotFFT", "@", "inputSound"}]], "Input",
 CellChangeTimes->{{3.683539278669242*^9, 3.683539282717339*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3XlbE1mD9/F+Zl7J8wae1zCvYf53+u6emZ6evuceBWRJCCSEfZEdg6A2
3dpg40a3iiI7Aq2yiCuLbAKBQEIgkAUSUjynKogIiGiryaG/n6uuXKFyqupU
1an6cYpK8X+/Pf6v3/7zV1999f/+z1df/cs/ffWV+n4TAAAAAAAAAAAAwDa/
/X5NUbopyWAw5VV32daVcFfoI6xPX9L/8P0P26JzepaD4a7UnxB09WQnVU74
wl2Pvyr5t/9ROSKOwtkJn09w6f4pfUGHza9sBpz95wypN+b84a7Th1Pcz8uT
C7oWN8JdkU9E/vOn3OTf/kfjiDgaZyf8ScrK42LDyTd0eS32QOgj/3xzzfVh
d+jXGs9wgS770UqE/o5zwFpsiubdU2UylNx65vBHaPXfcuC6HIXzp9yOwvaX
7IjYl0RnJ4SZEnD0VxmMtdPr4a7JR1J80901ebokS9OkT/JGfhTOnzI7Itv/
CB0R0p+d8BkF7E15sT98fyK7fnpN7oYe9Ly8mafPa97Zm5HPETl/SusobX/5
j4ijc3bCp6b47cOD076geLdu68zTF/S6JPwzr+IevFhZZw39buYbKzdk/bEk
4WqolDXb8NOBP64a9Ufk/CmZI7L9j8YRcTTOTviMPMMWQ1aTdV1R1mfv5SVk
djplbCF+61Vj4vk+Z0AJrry4lGT4aUzWc0/QPdJYfTo95u9xUp8/pXVUtv/R
OCKOxtkJn1HA2Vubn5wQHx+rz6xqtUraQ1fWrJ1VuUa9XpeYVtEw6pG7mSu+
sV+yzkt9/pTaUdj+R+OIOBpnJwAy+O6778JdBeDz8g4XGCvGP9FvN8rqU0tS
QsZPD5cO+q6D39ZkqXq8Emm/hCiu3lzTxam1w5YPrjy9WNEu759iccSRXzjy
Pml+qfy2uxnGixPvjIHg0h8luXdskXfa/9D8Eh3q+cZ8y8PDfZe+8eGk4Uxn
Yvk9w5l7prOd4tVQfi9JDBWd8WXt4sdEy73U890JZe1JZzrjytoTyzv05ep4
3ekO7dMO09kuUcZQ0aE/3SHexJW26bW5JVd0JpR16C33Ek6r0yaf6Uw6cy/B
0q6zdIg56y0d4lOxXN3p9tCCYku2PhIzFLMSSxSLiD/dJmYo5iBexUexJW26
8o64kjZRDXUm5e3RRa1itjHFokzHyaJWUSCmuFV8JAYxf1FSzFOMP1kiRrbF
n24/Way+jylqOamVjC0RP7bFFrfGlbbHFLWK8mI+8aXtUYWt2uLa40rE+BZR
LL6kPbZMTNKiVqZMDG1i0eI1qqg1urglurA1obQjuqhNzCSqsOVksTpzdSgS
r23q4krbteq1xJa2xZS0RqtlWsTcoovUacUkYky0WrhFfV+kDlEFLaHx4lUb
3xoaeUKMKWgVrydEAXVxrVFFzScKmo8XqHOIKmyOEu8LxZgWMeaEOjSHXo+L
Ib9ZVElMe1wrH1WkzlystaihWAtR7dCiYwpbtC0jNktbXEmr7nSbtjvUrScm
F69x2ps4basmWsSmbhOf6i1tKee6kivumc91pv34R/qP3QZLh9pCKjszq/4Q
7UGMN5/rEvl19veBlLOdor1lVN1PO98tCogh/fwfZnXoSqpQG5UoLxpJXKlo
V2pjE5srvlTsKVFbrWIlbeJH0Wz0lnaxv9SdXqpufPGRurmK1OpFaRtE2yPN
YpX/91ST+FFsB3UTia1X2BzaPlHaoL4JjdE2rNgIJwq39oW2ndVdoM1c3Xdi
g4c+itK2W2hHb+8sbXyr2NHRxeq20iZp1Xau+j5Ut5OlalsVdY7Wtme01sai
tFcxaHuhTSeamWg2xW2iiYoxW3tHLRyaRKxyh5jJSW0pom6xpephEl3cFlvW
HtpN6rSlYnFt8Vrzji0JvaobSj0cxDFiaT+pHl8dYlrRsMVM1OOouDW0r+PU
Q6BFbHxx0InXBIt6aKtHonYwqkOpOoijOFY9ANvUZmDpEO/VYiVthvJOrbAo
Iw5Y7SAtF4toTzyjHd3iwCxpE+cZsY7q2aakLbmyS5QUJ5947dgX5yXtHNIu
moRoRUnaosU8xbGfXNkpJhfzFCcW0QbE5GKJpsou9YwkCqgnMXV8cqV6ejFW
dqad/2Np5QPDxDtSqMvYdUfL+nRNSs7rM6vim2w5n2nQ6eITsy90ql+g9tsf
VOcY4nXG1KLq62ZDxbh3zdpoMZ6MS8kpvtBQn5XdYt/YM5V/ptac3a0tJ+js
yk67PuvfcD39rcSclKiLN5b+PugOLc5vvZykqxj07H95NGC7kZ7dsfjO2gYW
7/+caUjOyC+uuNJYl28w/zS4vNh3OT85QZecWlhTb0k7O+7zW+vyLuyNyKDr
yeX8JJ1Or9Ollt8aEfXZO7enL1+vRXCxIyv12qz6JXLvy2KjZXShN8dQUHs+
NyUpQWcuuzXkDq5NXTDl9rmU/bbhZmg75GbWHyqLRTP7t5Rb4Rq+Dt+iP99w
7M3a1Ye9MhE4iPz6t0Ps+q/N4a/qBw43DzEmjJX5BMOxzznzzzo8frlwiNPh
Du/Lr7XJS8mGqv6lgPq9sx+Ts5psC525Cdl3p9YUZe3VnfQTcRXjy1MXklPv
qPeWeEevG6PNLXbP7qns3t35NbP4yGLIVu9ICXombqQaq7W+i3+2zngiJq54
YN9vZwcW7mak/r7rySM7ahuYr081/Tq1LhLDO34rJS732YrzQaH+7dr6xDpV
512Z2fX9Of/sb6mm2lGvsql4Ri4a0xvtvj1zc6/PHJBfWSdiirsWAkrQ/aLW
aKgadr7ayq8923DrsqGaxplN9kM8Gebf0+9E4GHyaRd07GMnZPgcQyi/wjLQ
EvYbPuEh/GdmpU77+XbQ7e7xQwbXlvfkl3/uN7O5bjaUGMq6Y97hfJGvz3u6
qsWL4urJFv2v5Ymzxvwhj5YC1qvmjJa5md1Tra3vzq8J9YbKrZBU/EvzdvXL
AX7rFXPm7YfnTXnd+33JwTdaash96n472nbUVuRnbZbRcrX10ctZ21ClMX/Q
MVy4u7Y+NXHOn9qv46MElib6229eyDek/zLkCe6Zm8d/UH5lJ5a99GrzCSw0
pptqxsZC+bV3G27dfKOsPs41WHbeDvsdAGCPD8ovU0aLQ+0XiC6CKSoxMzdP
lZudYipu7S1MzHsSSoTg0oOst/NL9IAyslps1t1TdS1M1aakhzoeW/n1stKQ
+Tqlgmu+taCyuT51KSWr3eGdrk3JaNrn3gbvSIH+VGhB+9ZWiyCX9eWTB223
qotiY/IGHYMF2/kVXLqfFcovxf2sPL/N8XbHZ2369/ykdEvtna6n1tf3qO6a
m5ZfWfecW/llvmx9R37NN6SZasfHQ/m1dxt2OUOLdj/P0xeNePffM9u7bCOo
HHyV5rvD/ar8aYt91AwP+sXvi1fvZsRslv0r9mWW+zfz/pdP3zW3vU3xszW/
w7SWnWX2fy/P0bF3OGgt3tUJ+szru7f/9eY4Oky/7ODlVtY92XX2ew+RX9E/
HI95/fhRQ9mwR00E/YmU6t6ppbXg+nRdZv7d8ZUNcSofrc9Iqhya7y1NzLoz
4VMU7/jN1OOx++SX3bt7qhHXdK0hOuOOeiFPvTyXetu2/PxcUkb9pE8Jukeu
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
AEBGPL8XACAj+l8AABmRXwAAGZFfAAAZkV8AABmRXwAAGZFfAAAZkV8AABmR
XwAAGZFfAAAZkV8AABmRXwAAGZFfAAAZ8fxeAICM6H8BAGREfgEAZER+AQBk
RH4BAGREfgEAZER+AQBkRH4BAGREfgEAZER+AQBkRH4BAGREfgEAZER+AQBk
RH4BAGTE8+cBADKi/wUAkBH5BQCQEfkFAJAR+QUAkBH5BQCQEfkFAJAR+QUA
kBH5BQCQEfkFAIgY69OX9D98/8O26Jye5WDA2VeTbzaZTOmlN4fdwa2i5BcA
IGIo7uflyQVdixtvRm0s3ss1lN5f2lD81oYMQ/kzt6KNJ78AABEk4OypMhlK
bj1z+LWcUlx9OYmlgx71h6DzXkZi+ZhPK0h+AQAii+Kb7q7J0yVZmiZ9SsB2
02yqnfFrn3hHCnVZPS7tEuKu5/fyCF8AQCQIel7ezNPnNdust3blV69L65jR
/wIARAzFPXixss66rv3gGys3ZHVP9eboi59rf/TacLSnJ57h+iEAIOL4rVeN
ief7nAEluPLiUpLhpzGPszNXX9A+7w96x+vM+vLn3L8BAIg8ypq1syrXqNfr
EtMqGkY9wc3NgKOvNt+oi9eZS2+8WHl9/7zLvU5+AQCk410LkF8AAOmQXwAA
GZFfAAAZkV8AABmRXwAAGZFfAAAZkV8AABmRXwAAGZFfAAAZhfKLh88DAORC
/wsAICPyCwAgo1B+XWocDHdFAAD4AKH8qm0aCndFAAD4AOQXAEBG5BcAQEbk
FwBARuQXAEBG5BcAQEbkFwBARuQXAEBG5BcAQEY8vxcAICP6XwAAGZFfAAAZ
kV8AABmRXwAAGZFfAAAZkV8AABmRXwAAGZFfAAAZkV8AABmRXwAAGZFfAAAZ
kV8AABnx/F4AgIzofwEAZER+AQBkRH4BAGREfgEAZER+AQBkRH4BAGREfgEA
ZER+AQBkRH4BAGREfgEAZER+AQBkRH4BAGREfgEAZMTz5wEAMqL/BQCQEfkF
AJAR+QUAkBH5BQCQEfkFAJAR+QUAkBH5BQCQEfkFAJAR+QUAiCB++/2aonRT
ksFgyqvusq0rm5sBZ19NvtlkMqWX3hx2B7cKkl8AgIgRXLp/Sl/QYfMrIrX6
zxlSb8z5Fu/lGkrvL20ofmtDhqH8mVvRipJfAICI4Z9vrrk+vJVQnuECXXa/
tTcnsXTQo44KOu9lJJaP+bRPyS8AQARSAo7+KoOxdnL6ptlUO+PXRnpHCnVZ
PS7tEuKu5/fyCF8AQLgF7E15sT98fyK7fnrNb7u1K796XVr3jP4XACBiKH77
8OC0T3SwlHVbZ56+oHd5qS9HX/xcu6S44WhPTzzD9UMAQMTxDFsMWU3WdUVZ
n72Xl5DZ6Qw4O3P1Be3z/qB3vM6sL3/O/RsAgMgTcPbW5icnxMfH6jOrWq1r
6v3zjr7afKMuXmcuvfFihfvnAQAyI78AADIivwAAMiK/AAAyIr8AADIivwAA
MiK/AAAyIr8AADIivwAAMiK/AAAy2vX8+XBXBwCAQ6H/BQCQEfkFAJAR+QUA
kBH5BQCQEfkFAJAR+QUAkBH5BQCQEfkFAJAR+QUAkBH5BQCQEfkFAJAR+QUA
kBHP7wUAyIj+FwBARuQXAEBG5BcAQEbkFwBARuQXAEBG5BcAQEbkFwBARuQX
AEBG5BcAQEbkFwBARuQXAEBG5BcAQEbkFwBARjx/HgAgI/pfAAAZkV8AABmR
XwAAGZFfAAAZkV8AABmRXwAAGZFfAAAZkV8AABmRXwAAGZFfAAAZkV8AABlt
BBWRX7ZFT7grAgDAh+H5vQAAGRFbAAAZkV8AABmRXwAAGZFfAAAZkV8AABmR
XwAAGZFfAAAZkV8AABmRXwAAAAAAAAAAAAAAAAAAAAAAAAAQboqrN9d0cWot
3PUAAOBDkF8AgHBTPENndMlXZ/zbI9zPyuINv06v+2dqzdndS8HNzeBiR1bq
tVm1iPdlsdEyutCbYyioPZ+bkpSgM5fdGnIH16YumHL7XMqmeJOS93hF2dxc
n7mWozeWNNrc1kaL8WRcSk7xhYb6rOwW+0bA2Xc5PzlBl5xaWFNvSTs77lN8
ky3nMw06XXxi9oVOm18J4yYBAEjBN1al050b8YQiI7h0P/dk0nURVgfmV9aJ
mOKuhYASdL+oNRqqhp2vdueXsvokz/jj5Jo6Jjn1jnVdUbyj143R5pZ5x4NC
ffbdqTVFWXt1J/1EXMX48uSlZENV/1JACTj6f0zOarIHwrtRAACRb+1Vjf7v
/xtnSFLpY/7+D2O9TcTHgfmVnVj20qtNHVhoTDfVjI3tl1+mn1+J/Jo4a8wf
8qhl/dar5oyWqcFCfd7TVS0vFVdPtqFiZPI3s7luNtQHVNYd8441OmAAgPfx
W68lx5c+cyubG47W1Bhzo9b7UfMr655zK7/Ml63vyK/5hjRT7fj4YfIrMF+f
kdUy9bxgO79Edy/LUPHy1Q1TVGJmbp4qNzvFVNzl3Ajb5gAAyCJgqzfFFz9Z
DTja00+mtzu07BD5lRRX1O0IKL6xan1U6u3pNSUw35JuODdu7806EV3UYfMr
wZVnl5KTLowu73v9cP/8mnfcL9BnN0z6FMU7djP1eGzFuGu6LjP/7vjKhhJw
jdZnJFWOeOmAAQDea8PenBZf2DfZnhEXumS4qeVXakZ9XWV+ekK8uaLx4W3x
ThejL/h9wrvcm5dW3fBLgdkQrzNbbo/svX/D7+isSDvxj9jMihbr6K78Uu/f
6L+cb4yPN5iLaq6bDRXjPmXN2nkhJ0mn05tyK+sHV4Nh3RwAAFkEnZ1ZcUll
+ri8HtfHZMd2fin+pXm7T8xiu/91MO9wgVHk18fUGQCAzeByT96J76OKBlY+
6sLdm/7XZJVx6/55W1frwPL7/oxFfgEAAAAAAAAAgJ3+P7DqMWM=
   "], {{0, 0}, {576, 
   302}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{576, 302},
  PlotRange->{{0, 576}, {0, 302}}]], "Output",
 CellChangeTimes->{3.683539318405798*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Read a test sound", "Section",
 CellChangeTimes->{{3.6834167543259706`*^9, 3.6834167638029184`*^9}, {
  3.68353841826523*^9, 3.683538421660481*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSound", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<test data/output.wav\>\"", ",", "\"\<Data\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6832904165821304`*^9, 3.6832905281511307`*^9}, {
  3.68329059660713*^9, 3.6832906875771303`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Receiver", "Section",
 CellChangeTimes->{{3.6832903627421303`*^9, 3.68329037494013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"context", "=", "\"\<rx`\>\""}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Context", "[", "]"}], " ", "\[NotEqual]", " ", "context"}], 
      ",", 
      RowBox[{"Begin", "[", "context", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "1"}]}], "]"}], "]"}]}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6832903627431307`*^9, 3.6834151196178064`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Context[], UpdateInterval -> 1], StandardForm],
  ImageSizeCache->{24., {0., 12.}}]], "Output",
 CellChangeTimes->{{3.6832903627451305`*^9, 3.6832903838611307`*^9}, {
   3.6832910819862113`*^9, 3.6832911038403964`*^9}, 3.6834143519800425`*^9, 
   3.6834147692217627`*^9, 3.6834151212738066`*^9, 3.6834183367287045`*^9, 
   3.683418466140704*^9, {3.6835384323507853`*^9, 3.6835384420648813`*^9}, 
   3.683539343280645*^9, 3.683539401129464*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the agreed-upon start code, then crop to it", "Subsection",
 CellChangeTimes->{{3.6832906927401304`*^9, 3.6832907166431303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conv", "=", 
   RowBox[{"ListCorrelate", "[", 
    RowBox[{"signalStart", ",", "inputSound"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683416301585701*^9, 3.6834163088644285`*^9}, {
  3.6834163709286346`*^9, 3.6834163852860703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matchpoint", "=", 
  RowBox[{
   RowBox[{"Ordering", "[", 
    RowBox[{"conv", ",", 
     RowBox[{"-", "1"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6834164655340943`*^9, 3.6834164843489757`*^9}}],

Cell[BoxData["76791"], "Output",
 CellChangeTimes->{
  3.6834164863711777`*^9, 3.683416576150155*^9, 3.683417231639697*^9, 
   3.683417818174345*^9, 3.6834183395257044`*^9, {3.6834184696897044`*^9, 
   3.6834184817707043`*^9}, 3.683418515319704*^9, 3.683538442150764*^9, 
   3.683539343508724*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"croppedsound", "=", 
   RowBox[{"inputSound", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"matchpoint", "+", 
       RowBox[{"Length", "@", "signalStart"}]}], ";;"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6832907371151304`*^9, 3.6832907570971303`*^9}, {
  3.683416629968536*^9, 3.6834166417117105`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "@", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"conv", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6834162949250355`*^9, 3.68341629717126*^9}, {
  3.6834163895845003`*^9, 3.683416405495091*^9}, {3.683539389233773*^9, 
  3.68353939858014*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
F9QNBEH44gozvhAEcS6oGAiCIAiCAP8fM8p0gA==
   "], {{0, 0}, {360, 209}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{360, 209},
  PlotRange->{{0, 360}, {0, 209}}]], "Output",
 CellChangeTimes->{{3.6834163913316746`*^9, 3.6834164249850397`*^9}, 
   3.683416576693209*^9, 3.6834166671882577`*^9, 3.683417232307764*^9, 
   3.6834178223457623`*^9, 3.6834183424147043`*^9, {3.6834184713017044`*^9, 
   3.6834184832927046`*^9}, 3.683418517286704*^9, 3.683538442964232*^9, 
   3.6835393474328527`*^9, 3.683539407814789*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chop the sound into databaud long segments", "Subsection",
 CellChangeTimes->{{3.68329072004613*^9, 3.68329073225813*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"segments", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"croppedsound", ",", 
     RowBox[{"speakerbaud", "/", "databaud"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "segments"}]}], "Input",
 CellChangeTimes->{{3.6832908368191304`*^9, 3.6832908400091305`*^9}, {
  3.6832908783591304`*^9, 3.68329096201313*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"230", ",", "1000"}], "}"}]], "Output",
 CellChangeTimes->{{3.6832909150691304`*^9, 3.68329096240913*^9}, {
   3.6832910820682197`*^9, 3.68329110617563*^9}, 3.6834143627151155`*^9, 
   3.683414769310771*^9, 3.6834151296198063`*^9, 3.6834166724767866`*^9, 
   3.6834178315636835`*^9, 3.6834183480837045`*^9, 3.6834185229107046`*^9, 
   3.683538445172015*^9, 3.683539351320879*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract phase offsets from occasional phase reset symbols", "Subsection",
 CellChangeTimes->{{3.68353984561474*^9, 3.683539862293233*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"phasecorrectors", "=", 
   RowBox[{"segments", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}], ";;", "phaseCorrectFreq"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"datasegments", " ", "=", " ", 
  RowBox[{"Drop", "[", "segments"}]}]}], "Input",
 CellChangeTimes->{{3.683539884729368*^9, 3.6835399384895144`*^9}, {
  3.683539994718966*^9, 3.683540012850745*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["For each segment, identify the most likely symbol", "Subsection",
 CellChangeTimes->{{3.6832911735743694`*^9, 3.683291175832595*^9}, {
  3.683291257619773*^9, 3.6832912587618876`*^9}, {3.683414321962041*^9, 
  3.6834143364884934`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"baseCode", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "2", "Pi", " ", 
       RowBox[{"QuantityMagnitude", "@", "carrierfreq"}], " ", "#"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"N", "@", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"1", "/", 
         RowBox[{"QuantityMagnitude", "@", "databaud"}]}], ",", 
        RowBox[{"1", "/", 
         RowBox[{"QuantityMagnitude", "@", "speakerbaud"}]}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{"Length", "@", "baseCode"}]}], "Input",
 CellChangeTimes->{{3.683414683570198*^9, 3.683414685202361*^9}, 
   3.683414744076248*^9}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{
  3.683414512892132*^9, 3.683414688236665*^9, {3.683414745455386*^9, 
   3.683414769388779*^9}, 3.6834151325658064`*^9, 3.6834166778273215`*^9, 
   3.683417833795907*^9, 3.683418528423704*^9, 3.683538445285963*^9, 
   3.683539351481411*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ratios", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{"Length", "@", "baseCode"}], ")"}]}], 
      RowBox[{"Dot", "[", 
       RowBox[{"baseCode", ",", "#"}], "]"}]}], "&"}], "/@", 
    "datasegments"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Re", "[", "#1", "]"}], ",", 
            RowBox[{"Im", "[", "#1", "]"}]}], "}"}], ",", "#1"}], "]"}], 
        "&"}], ")"}], "/@", 
      RowBox[{"ratios", "[", 
       RowBox[{"[", 
        RowBox[{";;", "i"}], "]"}], "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2", ",", 
     RowBox[{"Length", "@", "ratios"}], ",", "1"}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6834143907749214`*^9, 3.6834144378266263`*^9}, {
   3.6834144920780506`*^9, 3.6834145024670897`*^9}, {3.6834147264744883`*^9, 
   3.6834147309609365`*^9}, {3.683418026028274*^9, 3.6834180564062357`*^9}, {
   3.683418111300746*^9, 3.683418150426833*^9}, 3.6834185624187045`*^9, {
   3.68353941319215*^9, 3.683539440460832*^9}, {3.683539481861857*^9, 
   3.68353949600369*^9}, 3.683540020699502*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{rx`i$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[rx`i$$], 2, 230, 1}}, Typeset`size$$ = {360., {177., 183.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    rx`i$12819$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {rx`i$$ = 2}, "ControllerVariables" :> {
        Hold[rx`i$$, rx`i$12819$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Map[Tooltip[{
           Re[#], 
           Im[#]}, #]& , 
         Part[rx`ratios, 
          Span[1, rx`i$$]]], AspectRatio -> 1], 
      "Specifications" :> {{rx`i$$, 2, 230, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {220., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.683418036086268*^9, {3.6834181148653893`*^9, 3.6834181513917365`*^9}, 
   3.6834185285277042`*^9, 3.6834185631727047`*^9, 3.6835384453748083`*^9, 
   3.6835393516273413`*^9, {3.683539460799567*^9, 3.683539496788838*^9}}]
}, Open  ]],

Cell["\<\
TODO: Correct for drift in phase space with clever snapping algorithms.\
\>", "Text",
 CellChangeTimes->{{3.6834153407428064`*^9, 3.6834153575588064`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestSymbol", "[", "ratio_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "differences", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"differences", "=", 
      RowBox[{"Abs", "[", 
       RowBox[{"ratio", "-", "symbolBases"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{"differences", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6834148477378063`*^9, 3.6834148512398067`*^9}, {
  3.683414975505807*^9, 3.6834150668108063`*^9}, {3.6834151501128063`*^9, 
  3.6834151501928062`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symbols", "=", 
  RowBox[{"bestSymbol", "/@", "ratios"}]}]], "Input",
 CellChangeTimes->{{3.683415094920807*^9, 3.6834151063858066`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.683415108099807*^9, 3.6834151542588067`*^9}, 
   3.683416677894328*^9, 3.6834178338859158`*^9, 3.6834185285547047`*^9, 
   3.6835384454152937`*^9, 3.683539351760089*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convert the symbols back into text", "Subsection",
 CellChangeTimes->{{3.683415170276807*^9, 3.6834151780278063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bytes", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"FromDigits", "[", 
     RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
   RowBox[{"Partition", "[", 
    RowBox[{"symbols", ",", "8"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6834151808318067`*^9, 3.6834151931428065`*^9}, {
  3.683415230505807*^9, 3.683415249979807*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "111", ",", "101", ",", "115", ",", "32", ",", "116", ",", 
   "104", ",", "105", ",", "115", ",", "32", ",", "124", ",", "106", ",", 
   "105", ",", "106", ",", "103", ",", "32", ",", "119", ",", "111", ",", 
   "114", ",", "107", ",", "63", ",", "245", ",", "116", ",", "174", ",", 
   "63", ",", "196", ",", "181", ",", "18"}], "}"}]], "Output",
 CellChangeTimes->{3.6834152517018065`*^9, 3.6834166807296114`*^9, 
  3.683417847053232*^9, 3.6834185349997044`*^9, 3.683538445419894*^9, 
  3.683539351838315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"output", "=", 
  RowBox[{"FromCharacterCode", "@", "bytes"}]}]], "Input",
 CellChangeTimes->{{3.683415292361807*^9, 3.6834152989448066`*^9}}],

Cell[BoxData["\<\"does this |jijg work?\[OTilde]t\[RegisteredTrademark]?\
\[CapitalADoubleDot]\[Micro]\.12\"\>"], "Output",
 CellChangeTimes->{3.683415299276807*^9, 3.683416680772616*^9, 
  3.6834178471062374`*^9, 3.683418535081704*^9, 3.683538445442738*^9, 
  3.683539351914228*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleanup", "Subsection",
 CellChangeTimes->{{3.6832905377471304`*^9, 3.68329054079613*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"context", "=", "\"\<rx`\>\""}], "}"}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Context", "[", "]"}], "\[Equal]", "context"}], ",", 
     RowBox[{"End", "[", "]"}], ",", "\"\<Not in context\>\""}], "]"}]}], 
  "]"}]], "Input",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6832903627491302`*^9}],

Cell[BoxData["\<\"rx`\"\>"], "Output",
 CellChangeTimes->{{3.6832903627521305`*^9, 3.6832903816691303`*^9}, 
   3.6832910820772204`*^9, 3.6834147694127817`*^9, 3.683538445466393*^9, 
   3.6835393521056833`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{942, 962},
WindowMargins->{{0, Automatic}, {Automatic, 28}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 321, 4, 93, "Title"],
Cell[904, 28, 331, 7, 68, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1260, 39, 105, 1, 65, "Section"],
Cell[1368, 42, 974, 23, 102, "Input"],
Cell[CellGroupData[{
Cell[2367, 69, 280, 8, 35, "Input"],
Cell[2650, 79, 235, 6, 32, "Output"]
}, Open  ]],
Cell[2900, 88, 127, 1, 33, "Text"],
Cell[3030, 91, 707, 17, 91, "Input"],
Cell[3740, 110, 220, 4, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3997, 119, 120, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[4142, 126, 625, 19, 56, "Input"],
Cell[4770, 147, 604, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5411, 163, 119, 1, 45, "Subsection"],
Cell[5533, 166, 182, 4, 32, "Input"],
Cell[5718, 172, 199, 4, 33, "Text"],
Cell[5920, 178, 1330, 33, 80, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7287, 216, 123, 1, 45, "Subsection"],
Cell[7413, 219, 375, 6, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7825, 230, 119, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[7969, 235, 629, 14, 77, "Input"],
Cell[8601, 251, 803, 13, 32, "Output"],
Cell[9407, 266, 2311, 32, 109, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11767, 304, 140, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[11932, 309, 349, 9, 32, "Input"],
Cell[12284, 320, 2467, 34, 147, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14800, 360, 123, 1, 45, "Subsection"],
Cell[14926, 363, 326, 10, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15289, 378, 120, 1, 45, "Subsection"],
Cell[15412, 381, 242, 6, 35, "Input"],
Cell[CellGroupData[{
Cell[15679, 391, 417, 11, 56, "Input"],
Cell[16099, 404, 217, 3, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16365, 413, 115, 1, 45, "Subsection"],
Cell[16483, 416, 325, 9, 35, "Input"],
Cell[16811, 427, 185, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[17021, 434, 255, 4, 32, "Input"],
Cell[17279, 440, 445, 6, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17773, 452, 99, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[17897, 457, 426, 13, 35, "Input"],
Cell[18326, 472, 297, 4, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18684, 483, 103, 1, 65, "Section"],
Cell[18790, 486, 232, 6, 33, "Text"],
Cell[19025, 494, 465, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[19515, 507, 127, 2, 30, "Input"],
Cell[19645, 511, 242, 3, 30, "Output"]
}, Open  ]],
Cell[19902, 517, 320, 8, 35, "Input"],
Cell[20225, 527, 460, 13, 56, "Input"],
Cell[CellGroupData[{
Cell[20710, 544, 130, 2, 32, "Input"],
Cell[20843, 548, 10542, 176, 317, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31434, 730, 154, 2, 65, "Section"],
Cell[31591, 734, 296, 7, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31924, 746, 94, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[32043, 751, 651, 19, 56, "Input"],
Cell[32697, 772, 494, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33228, 786, 140, 1, 45, "Subsection"],
Cell[33371, 789, 276, 6, 35, "Input"],
Cell[CellGroupData[{
Cell[33672, 799, 265, 7, 32, "Input"],
Cell[33940, 808, 297, 5, 30, "Output"]
}, Open  ]],
Cell[34252, 816, 366, 10, 35, "Input"],
Cell[CellGroupData[{
Cell[34643, 830, 331, 7, 32, "Input"],
Cell[34977, 839, 13449, 222, 224, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48475, 1067, 128, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[48628, 1072, 381, 9, 52, "Input"],
Cell[49012, 1083, 418, 7, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49479, 1096, 144, 1, 45, "Subsection"],
Cell[49626, 1099, 443, 11, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50106, 1115, 241, 3, 45, "Subsection"],
Cell[CellGroupData[{
Cell[50372, 1122, 786, 22, 80, "Input"],
Cell[51161, 1146, 292, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51490, 1156, 1434, 39, 104, "Input"],
Cell[52927, 1197, 1812, 39, 464, "Output"]
}, Open  ]],
Cell[54754, 1239, 165, 3, 33, "Text"],
Cell[54922, 1244, 762, 19, 131, "Input"],
Cell[CellGroupData[{
Cell[55709, 1267, 161, 3, 32, "Input"],
Cell[55873, 1272, 2668, 36, 147, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58590, 1314, 124, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[58739, 1319, 348, 9, 32, "Input"],
Cell[59090, 1330, 566, 10, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59693, 1345, 165, 3, 32, "Input"],
Cell[59861, 1350, 283, 4, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60193, 1360, 96, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[60314, 1365, 426, 13, 35, "Input"],
Cell[60743, 1380, 210, 3, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

